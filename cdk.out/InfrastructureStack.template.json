{
 "Resources": {
  "PostsUserPool11DF0D68": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsUserPool/Resource"
   }
  },
  "PostsUserPoolClient7203F027": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "PostsUserPool11DF0D68"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsUserPoolClient/Resource"
   }
  },
  "PostsIdentityPool": {
   "Type": "AWS::Cognito::IdentityPool",
   "Properties": {
    "AllowUnauthenticatedIdentities": false,
    "CognitoIdentityProviders": [
     {
      "ClientId": {
       "Ref": "PostsUserPoolClient7203F027"
      },
      "ProviderName": {
       "Fn::GetAtt": [
        "PostsUserPool11DF0D68",
        "ProviderName"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsIdentityPool"
   }
  },
  "PostsTableC82B36F0": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsTable/Resource"
   }
  },
  "PostsApi3071F4B3": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
    "Name": "posts-api",
    "UserPoolConfig": {
     "AwsRegion": {
      "Ref": "AWS::Region"
     },
     "DefaultAction": "ALLOW",
     "UserPoolId": {
      "Ref": "PostsUserPool11DF0D68"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/Resource"
   }
  },
  "PostsApiSchema2EF8909B": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "PostsApi3071F4B3",
      "ApiId"
     ]
    },
    "Definition": "type Post @aws_api_key @aws_cognito_user_pools {\n  id: ID!\n  content: String!\n  authorId: String!\n  authorName: String!\n  timestamp: String!\n  likes: Int!\n  comments: Int!\n  attachments: [Attachment]\n}\n\ntype Attachment {\n  type: AttachmentType!\n  url: String!\n}\n\nenum AttachmentType {\n  IMAGE\n  AUDIO\n  VIDEO\n}\n\ntype Query {\n  getPosts: [Post]! @aws_api_key @aws_cognito_user_pools\n}\n\ntype Mutation {\n  createPost(input: CreatePostInput!): Post! @aws_cognito_user_pools\n  updatePost(id: ID!, input: UpdatePostInput!): Post! @aws_cognito_user_pools\n  deletePost(id: ID!): Boolean! @aws_cognito_user_pools\n}\n\ninput CreatePostInput {\n  content: String!\n  authorId: String!\n  authorName: String!\n  attachments: [AttachmentInput]\n}\n\ninput UpdatePostInput {\n  content: String\n  attachments: [AttachmentInput]\n}\n\ninput AttachmentInput {\n  type: AttachmentType!\n  url: String!\n}"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/Schema"
   }
  },
  "PostsApiPostsLambdaDataSourceServiceRole51E6BE20": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/PostsLambdaDataSource/ServiceRole/Resource"
   }
  },
  "PostsApiPostsLambdaDataSourceServiceRoleDefaultPolicyF48D0527": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyFunction3BAA72D1",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PostsApiPostsLambdaDataSourceServiceRoleDefaultPolicyF48D0527",
    "Roles": [
     {
      "Ref": "PostsApiPostsLambdaDataSourceServiceRole51E6BE20"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/PostsLambdaDataSource/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PostsApiPostsLambdaDataSourceDA8D04ED": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "PostsApi3071F4B3",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "MyFunction3BAA72D1",
       "Arn"
      ]
     }
    },
    "Name": "PostsLambdaDataSource",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "PostsApiPostsLambdaDataSourceServiceRole51E6BE20",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/PostsLambdaDataSource/Resource"
   }
  },
  "PostsApiQueryGetPosts8F7D2C80": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "PostsApi3071F4B3",
      "ApiId"
     ]
    },
    "DataSourceName": "PostsLambdaDataSource",
    "FieldName": "getPosts",
    "Kind": "UNIT",
    "TypeName": "Query"
   },
   "DependsOn": [
    "PostsApiPostsLambdaDataSourceDA8D04ED",
    "PostsApiSchema2EF8909B"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/QueryGetPosts/Resource"
   }
  },
  "PostsApiMutationCreatePost97229947": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "PostsApi3071F4B3",
      "ApiId"
     ]
    },
    "DataSourceName": "PostsLambdaDataSource",
    "FieldName": "createPost",
    "Kind": "UNIT",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "PostsApiPostsLambdaDataSourceDA8D04ED",
    "PostsApiSchema2EF8909B"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/MutationCreatePost/Resource"
   }
  },
  "PostsApiMutationUpdatePost1B8D7776": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "PostsApi3071F4B3",
      "ApiId"
     ]
    },
    "DataSourceName": "PostsLambdaDataSource",
    "FieldName": "updatePost",
    "Kind": "UNIT",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "PostsApiPostsLambdaDataSourceDA8D04ED",
    "PostsApiSchema2EF8909B"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/MutationUpdatePost/Resource"
   }
  },
  "PostsApiMutationDeletePost2611CD65": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "PostsApi3071F4B3",
      "ApiId"
     ]
    },
    "DataSourceName": "PostsLambdaDataSource",
    "FieldName": "deletePost",
    "Kind": "UNIT",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "PostsApiPostsLambdaDataSourceDA8D04ED",
    "PostsApiSchema2EF8909B"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsApi/MutationDeletePost/Resource"
   }
  },
  "MyFunctionServiceRole3C357FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/MyFunction/ServiceRole/Resource"
   }
  },
  "MyFunctionServiceRoleDefaultPolicyB705ABD4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PostsTableC82B36F0",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyFunctionServiceRoleDefaultPolicyB705ABD4",
    "Roles": [
     {
      "Ref": "MyFunctionServiceRole3C357FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/MyFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MyFunction3BAA72D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fb5ea0c5a8fe67078bba85993f3b95b90ea3989d3520ac24c7bfb055b5f70999.zip"
    },
    "Environment": {
     "Variables": {
      "POSTS_TABLE": {
       "Ref": "PostsTableC82B36F0"
      }
     }
    },
    "Handler": "lambda/dynamodb/index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MyFunctionServiceRole3C357FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "MyFunctionServiceRoleDefaultPolicyB705ABD4",
    "MyFunctionServiceRole3C357FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/MyFunction/Resource",
    "aws:asset:path": "asset.fb5ea0c5a8fe67078bba85993f3b95b90ea3989d3520ac24c7bfb055b5f70999",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MyFunctionExecutionRole12D3604D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonDynamoDBFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSAppSyncInvokeFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/MyFunctionExecutionRole/Resource"
   }
  },
  "AuthenticatedRole86104F1A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "PostsIdentityPool"
         }
        },
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonCognitoPowerUser"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/AuthenticatedRole/Resource"
   }
  },
  "AuthenticatedRoleDefaultPolicy8B1AC271": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "appsync:GraphQL",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:appsync:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":apis/",
           {
            "Fn::GetAtt": [
             "PostsApi3071F4B3",
             "ApiId"
            ]
           },
           "/types/Query/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:appsync:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":apis/",
           {
            "Fn::GetAtt": [
             "PostsApi3071F4B3",
             "ApiId"
            ]
           },
           "/types/Mutation/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuthenticatedRoleDefaultPolicy8B1AC271",
    "Roles": [
     {
      "Ref": "AuthenticatedRole86104F1A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/AuthenticatedRole/DefaultPolicy/Resource"
   }
  },
  "PostsLambdaDataSourceRole8A534766": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsLambdaDataSourceRole/Resource"
   }
  },
  "PostsLambdaDataSourceRoleDefaultPolicyC32AEE6E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyFunction3BAA72D1",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PostsLambdaDataSourceRoleDefaultPolicyC32AEE6E",
    "Roles": [
     {
      "Ref": "PostsLambdaDataSourceRole8A534766"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/PostsLambdaDataSourceRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VOXU/CMBT9LbyXq0CIvgJGY0IibvpM7to6yrp27t5Blmb/3bTLFJ/O1805dwmLhzUsZniluVTV3JoCQs4oK4FXOgbpS2fYQ/gk3R68t2L35X75RHbWaMe30Z/zqrRjw310B6F6h7VXBYQPLKyOB4kMApuGeichvLTYnL7tpjExTep9/1/l8qRrFHusC4VPyJj7rpWp7UZlmry96DbaEx+EwRpC5sfthAdvjeyjHNkgbCqG8Nw5yca7mE18ELQ6IpFmgk0EQSvYdrLSvEXSQ5pN+ynNGUvjytjw1nHT8fTN9PDOO2XGYueVhjPdXRaPsLyH9exMxszbzrGpNWQj/gDtB7NdsgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "GraphQLApiUrl": {
   "Value": {
    "Fn::GetAtt": [
     "PostsApi3071F4B3",
     "GraphQLUrl"
    ]
   }
  },
  "UserPoolId": {
   "Value": {
    "Ref": "PostsUserPool11DF0D68"
   }
  },
  "UserPoolClientId": {
   "Value": {
    "Ref": "PostsUserPoolClient7203F027"
   }
  },
  "IdentityPoolId": {
   "Value": {
    "Ref": "PostsIdentityPool"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}